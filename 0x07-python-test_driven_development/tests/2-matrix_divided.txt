The ``2-matrix_divided`` module
==============================

Using ``matrix_divided``
------------------------------

This is a doctest to the matrix divided module created to
divides all elements of a matrix.

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

==============================
Normal examples
------------------------------
>>> matrix_divided([[1, 2, 3], [1, 2, 3]], 1)
[[1.0, 2.0, 3.0], [1.0, 2.0, 3.0]]
>>> matrix_divided([[1.4, 2.34, 3.3], [4.33, 5.3, 6.7]], 3)
[[0.47, 0.78, 1.1], [1.44, 1.77, 2.23]]
>>> matrix_divided([[1, 2, 3], [1, 2, 3]], 7.5)
[[0.13, 0.27, 0.4], [0.13, 0.27, 0.4]]
>>> matrix_divided([[1.4, 2.34, 3.3], [4.33, 5.3, 6.7]], 4.3)
[[0.33, 0.54, 0.77], [1.01, 1.23, 1.56]]

==============================
With dividend zero (0)
------------------------------
>>> matrix_divided([[1, 2, 3], [1, 2, 3]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

==============================
With dividend not number
------------------------------
>>> matrix_divided([[1, 2, 3], [1, 2, 3]], "string")
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 'l')
Traceback (most recent call last):
    ...
TypeError: div must be a number

==============================
Matrix is not a list
------------------------------
>>> matrix_divided((1, 2), 4)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(8, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

==============================
Matrix is not a list with lists
------------------------------
>>> matrix_divided([(1, 2), (1, 2)], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([{"brand": "Ford"}, {"year": 1964}], 5)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

==============================
Matrix is an empty list
------------------------------
>>> matrix_divided([], 5)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[], []], 5)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

========================================
The list doesn't have integers or float
----------------------------------------
>>> matrix_divided([[5, 4, "string"], [2, 4, 6]], 5)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[2, 4, 6], [5, 4, "string"]], 5)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

=======================================
The rows of matrix has different sizes
---------------------------------------
>>> matrix_divided([[5, 2], [2, 4, 6]], 5)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([[5, 2, 83, 4], [2, 4, 6]], 5)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
